name: 'Deployment'

# Only trigger, when the build workflow succeeded
on:
  push:
    branches: [ main ]
    
jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    steps:
    
    # Configure AWS credentials
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-1
          
    # Checkout the repository to the GitHub Actions runner      
    - uses: actions/checkout@v1  
      with:
        repository: AltaPay/plugin-infrastructure
        token: ${{ secrets.ACCESS_TOKEN }}
        ref: 'origin/woocom-configuration'

    - name: Echo secrets
      run: |
        echo ${{ secrets.ACCESS_TOKEN }}
        echo ${{ secrets.AWS_ACCESS_KEY_ID }}
        
    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 0.14.4

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init 
      working-directory: ../plugin-infrastructure/provision/plugins


    # Select a terraofrm workspace
    - name: Terraform workspace
      run: terraform workspace select wordpress
      working-directory: ../plugin-infrastructure/provision/plugins
      
      
    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan
      working-directory: ../plugin-infrastructure/provision/plugins
      
    # On push to main, build or change infrastructure according to Terraform configuration files
    # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
    - name: Terraform Apply
      #if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -var ec2_type=t2.micro -auto-approve
      working-directory: ../plugin-infrastructure/provision/plugins
      
    - name: Sleep for 20 seconds
      uses: jakejarvis/wait-action@master
      with:
        time: '20s'
   
    - name: Run playbook
      uses: dawidd6/action-ansible-playbook@v2
      with:
        playbook: wordpress.yml
        directory: ../plugin-infrastructure/deploy/plugins
        key: ${{secrets.SSHKEY}}
        options: |
          -u ubuntu
          -i inventory
          --extra-vars "branch_name=altapay-config gatewayURL=${{ secrets.GATEWAYURL }} gatewayUser=${{ secrets.GATEWAYUSER }} gatewayPass=${{ secrets.GATEWAYPASS }}"

    - name: Export IP
      run: |
        testvar=$(sed '4!d' inventory)
        echo $testvar
        echo "IP=$testvar">> $GITHUB_ENV
        echo $IP
      working-directory: ../plugin-infrastructure/deploy/plugins
        
    # Run Cypress tests   
    - uses: actions/checkout@v1
      with:
        repository: AltaPay/plugin-wordpress
        ref: 'origin/main'
        path: TestRepo
             
    - name: Create json
      id: create-json-2  # Second ID
      uses: jsdaniell/create-json@1.1.2
      with:
        name: "config.json"
        json: '{"url": "http://${{env.IP}}/wordpress","adminURL": "http://${{env.IP}}/wordpress/wp-admin","adminUsername": ${{secrets.SHOP_ADMIN_USERNAME}},"adminPass": ${{secrets.SHOP_ADMIN_PASS}}}'
        dir: Test/Integration test/cypress/fixtures/
        
    - name: Cat File Contents
      run: |
        pwd
        cat config.json
      working-directory: Test/Integration test/cypress/fixtures/
      
    - name: Install Dependencies 
      run: npm i
      working-directory: Test/Integration test
      
    - name: Run Cypress tests 
      run: ./node_modules/.bin/cypress run --config video=false
      working-directory: Test/Integration test
